unit F1_Logical;

interface

uses
  globalData, constdata, Vcl.Graphics;

procedure SaveFileColor;
procedure SaveGardenMas;
procedure StartData;
procedure ReadGardenMas;
procedure ReadFileColor();

implementation

procedure SaveFileColor;
var
  currFile: file of RecordDictionary;

  count: integer;

  tempPair: RecordDictionary;
begin
  count := 0;

  AssignFile(currFile, FileColor);
  rewrite(currFile);

  for var temp in dictionaryColorToId do
  begin
    tempPair.corGarden := temp.Key;
    tempPair.Color := temp.Value;

    seek(currFile, count);
    write(currFile, tempPair);
    inc(count);
  end;

  closefile(currFile);
end;

procedure SaveGardenMas;

var
  currFile: file of TGardenCell;
  count: integer;
begin
  AssignFile(currFile, UserFileGarden);
  rewrite(currFile);

  count := 0;
  for var I := 0 to _GardenX do
  begin
    for var J := 0 to _GardenY do
    begin
      seek(currFile, count);
      write(currFile, GardenMas[I][J]);
      inc(count);
    end;
  end;

  closefile(currFile);

end;

procedure StartData;
var
  I, J: integer;
begin
  dictionaryColorToId.Clear();
  dictionaryColorToId.Add(1, clRed);
  dictionaryColorToId.Add(2, clGreen);
  dictionaryColorToId.Add(3, clBlue);
  dictionaryColorToId.Add(4, clBlack);

  // *
  for I := 0 to 6 do
  begin
    for J := 0 to 4 do
    begin
      GardenMas[I][J].CodGarden := 1;
      GardenMas[I][J].Ñulture.cod := 2;
      // GardenMas[I][J].Ñulture.Name := 666;
    end;
  end;

  for I := 7 to 13 do
  begin
    for J := 0 to 7 do
    begin
      GardenMas[I][J].CodGarden := 2;
      GardenMas[I][J].Ñulture.cod := 3;
      // GardenMas[I][J].Ñulture := 666;
    end;
  end;

  for I := 14 to _GardenX do
  begin
    for J := 0 to _GardenY do
    begin
      GardenMas[I][J].CodGarden := 3;
      GardenMas[I][J].Ñulture.cod := 4;
      // GardenMas[I][J].Ñulture := 666;
    end;
  end;

  for I := 7 to 13 do
  begin
    for J := 6 to _GardenY do
    begin
      GardenMas[I][J].CodGarden := 4;
      GardenMas[I][J].Ñulture.cod := 5;
      // GardenMas[I][J].Ñulture := 666;
    end;
  end;

  for I := 0 to 6 do
  begin
    for J := 4 to _GardenY do
    begin
      GardenMas[I][J].CodGarden := 4;
      GardenMas[I][J].Ñulture.cod := 1;
      // GardenMas[I][J].Ñulture := 666;
    end;
  end;
end;

procedure ReadFileColor();
var
  currFile: file of RecordDictionary;

  tempPair: RecordDictionary;
begin
  AssignFile(currFile, FileColor);
  Reset(currFile);

  while not EoF(currFile) do
  begin
    Read(currFile, tempPair);
    dictionaryColorToId.Add(tempPair.corGarden, tempPair.Color);
  end;

  Close(currFile);
end;

procedure ReadGardenMas;
var
  currFile: file of TGardenCell;

  I, J: integer;
begin

  AssignFile(currFile, UserFileGarden);
  Reset(currFile);

  for I := 0 to _GardenX do
  begin
    for J := 0 to _GardenY do
    begin
      Read(currFile, GardenMas[I][J]);
    end;
  end;

  closefile(currFile);

end;

end.
